using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the workbook function below.
    static int workbook(int chapterCount, int problemsPerPage, int[] arr) {
        int specialProblems = 0;
        int pageIndex = 1;

        //Loop the chapters.
        for (int i = 0; i < chapterCount; i++) {
           
            //Loop the problems for current chapter.
            int breakPoint = problemsPerPage;
            for (int p = 1; p <= arr[i]; p++) {
                //Check for page change.
                if (p > breakPoint) {
                    pageIndex++;
                    breakPoint += problemsPerPage;
                }
                
                //Check for problem match with page index.
                if (p == pageIndex) {
                    specialProblems++;
                }
            }

            pageIndex++; //new page for new chapter
        }

        return specialProblems;
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] nk = Console.ReadLine().Split(' ');

        int n = Convert.ToInt32(nk[0]);

        int k = Convert.ToInt32(nk[1]);

        int[] arr = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp => Convert.ToInt32(arrTemp))
        ;
        int result = workbook(n, k, arr);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}